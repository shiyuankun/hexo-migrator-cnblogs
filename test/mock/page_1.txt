<!DOCTYPE html>
<html lang="zh-cn">
<head>
<meta charset="utf-8"/>
<title>夜明的孤行灯 - 博客园</title>
<link type="text/css" rel="stylesheet" href="/bundles/blog-common.css?v=gdNkSiQMyBMkpTeO1ex9qW-60UbMszQItnCUpBAT3LQ1"/>
<link id="MainCss" type="text/css" rel="stylesheet" href="http://common.cnblogs.com/Skins/BlackLowKey/style.css?id=20140110"/>
<link type="text/css" rel="stylesheet" href="/blog/customcss/100509.css?v=FKHdWkMrzhRiQrhBVN%2fgycvkvKM%3d"/>
<link title="RSS" type="application/rss+xml" rel="alternate" href="http://www.cnblogs.com/htynkn/rss"/>
<link title="RSD" type="application/rsd+xml" rel="EditURI" href="http://www.cnblogs.com/htynkn/rsd.xml"/>
<link type="application/wlwmanifest+xml" rel="wlwmanifest" href="http://www.cnblogs.com/htynkn/wlwmanifest.xml"/>
<script src="http://common.cnblogs.com/script/jquery.js" type="text/javascript"></script>
<script type="text/javascript">var currentBlogApp = 'htynkn', cb_enable_mathjax=true;</script>
<script src="/bundles/blog-common.js?v=YE4Yf2v1HpAVZLFA45p-EjGRYWlmADxKPN4_Gi-5S9Y1" type="text/javascript"></script>
</head>
<body>
<a name="top"></a>
<!--PageBeginHtml Block Begin-->
<link type="text/css" rel="Stylesheet" href="http://agorbatchev.typepad.com/pub/sh/3_0_83/styles/shThemeMidnight.css" />
<link type="text/css" rel="Stylesheet" href="http://files.cnblogs.com/htynkn/own.css"/>
<script src="http://agorbatchev.typepad.com/pub/sh/3_0_83/scripts/shBrushBash.js"></script>
<!--PageBeginHtml Block End-->

<!--done-->
<div id="home">
<div id="header">
	<div id="blogTitle">
	<a id="lnkBlogLogo" href="http://www.cnblogs.com/htynkn/"><img id="blogLogo" src="/Skins/custom/images/logo.gif" alt="返回主页" /></a>

<!--done-->
<h1><a id="Header1_HeaderTitle" class="headermaintitle" href="http://www.cnblogs.com/htynkn/">夜明的孤行灯</a></h1>
<h2>有一种准则，它不是墙上贴着的，而是像空气一样无处不在的</h2>




	</div><!--end: blogTitle 博客的标题和副标题 -->
	<div id="navigator">

<ul id="navList">
<li><a id="MyLinks1_HomeLink" class="menu" href="http://www.cnblogs.com/">博客园</a></li>
<li><a id="MyLinks1_MyHomeLink" class="menu" href="http://www.cnblogs.com/htynkn/">首页</a></li>
<li><a class="menu" href="http://q.cnblogs.com/">博问</a></li>
<li><a class="menu" href="http://home.cnblogs.com/ing/">闪存</a></li>
<li><a id="MyLinks1_NewPostLink" class="menu" rel="nofollow" href="http://i.cnblogs.com/EditPosts.aspx?opt=1">新随笔</a></li>
<li><a id="MyLinks1_ContactLink" class="menu" rel="nofollow" href="http://space.cnblogs.com/msg/send/%e5%a4%9c%e6%98%8e%e7%9a%84%e5%ad%a4%e8%a1%8c%e7%81%af">联系</a></li>
<li><a id="MyLinks1_Syndication" class="menu" href="http://www.cnblogs.com/htynkn/rss">订阅</a>
<!--<a id="MyLinks1_XMLLink" class="aHeaderXML" href="http://www.cnblogs.com/htynkn/rss"><img src="http://www.cnblogs.com/images/xml.gif" alt="订阅" /></a>--></li>
<li><a id="MyLinks1_Admin" class="menu" rel="nofollow" href="http://i.cnblogs.com/">管理</a></li>
</ul>
		<div class="blogStats">


<!--done-->
随笔- 66&nbsp;
文章- 2&nbsp;
评论- 807&nbsp;


		</div><!--end: blogStats -->
	</div><!--end: navigator 博客导航栏 -->
</div><!--end: header 头部 -->

<div id="main">
	<div id="mainContent">
	<div class="forFlow">


<!--done-->



<div class="day">
	<div class="dayTitle">
		<a id="homepage1_HomePageDays_ctl00_ImageLink"></a>
	</div>


			<div class="postTitle">
				<a id="homepage1_HomePageDays_ctl00_DayList_TitleUrl_0" class="postTitle2" href="http://www.cnblogs.com/htynkn/p/gradle_svn_sae.html">使用Gradle自动发布Java Web到SAE</a>
			</div>
			<div class="postCon"><div class="c_b_p_desc">摘要: 现在像SAE这类的应用引擎已经比较多了，百度和腾讯都出了这样的东西。我很早的时候就开始用SAE，当时还为了迁就SAE学习了PHP（当时只支持PHP和另外一个什么语言）。后来SAE支持Java了，版本是6，容器是Jetty 7.4，而常用的框架也基本能跑。代码的部署使用svn，稍微有点麻烦。最近在做一个Java Web的练习，代码放在github上，每次上传到SAE很烦。项目使用Gradle管理，所以琢磨着怎么把自动发布到SAE这个事情交给Gradle来做。流程分析先来看一下SAE这边。建立默认版本，版本号为1。然后通过代码管理页面上传一个war包。进入svn仓库看一看其实就是把对应的war包放<a href="http://www.cnblogs.com/htynkn/p/gradle_svn_sae.html" class="c_b_p_desc_readmore">阅读全文</a></div></div>
			<div class="clear"></div>
			<div class="postDesc">posted @ 2014-01-17 11:59 夜明的孤行灯 阅读(586) 评论(0)  <a href ="http://i.cnblogs.com/EditPosts.aspx?postid=3523713" rel="nofollow">编辑</a></div>
			<div class="clear"></div>

			<div class="postSeparator"></div>

			<div class="postTitle">
				<a id="homepage1_HomePageDays_ctl00_DayList_TitleUrl_1" class="postTitle2" href="http://www.cnblogs.com/htynkn/p/AngularJS-3.html">注入器和发布库--AngularJS学习笔记（三）</a>
			</div>
			<div class="postCon"><div class="c_b_p_desc">摘要: AngularJS的一大特性就是Module的加载和依赖注入，本文将分析一下loader.js和最后这些代码文件是怎么组织和运行的。Loader.js该文件中只有setupModuleLoader函数，当然它的返回值是一个函数，包含了angular.Module的API。首先是位置，这些配置和模块保存在哪里var $injectorMinErr = minErr(&#39;$injector&#39;);var ngMinErr = minErr(&#39;ng&#39;);function ensure(obj, name, factory) { return obj[name] || (o<a href="http://www.cnblogs.com/htynkn/p/AngularJS-3.html" class="c_b_p_desc_readmore">阅读全文</a></div></div>
			<div class="clear"></div>
			<div class="postDesc">posted @ 2014-01-13 22:33 夜明的孤行灯 阅读(717) 评论(0)  <a href ="http://i.cnblogs.com/EditPosts.aspx?postid=3518164" rel="nofollow">编辑</a></div>
			<div class="clear"></div>

			<div class="postSeparator"></div>

			<div class="postTitle">
				<a id="homepage1_HomePageDays_ctl00_DayList_TitleUrl_2" class="postTitle2" href="http://www.cnblogs.com/htynkn/p/AngularJS-2.html">启动和JQuery绑定--AngularJS学习笔记（二）</a>
			</div>
			<div class="postCon"><div class="c_b_p_desc">摘要: 上一篇简单的分析了AngularJS的项目结构，后面就开始分析具体的源代码了。从angularFiles.js中的定义可以看出有几个文件直接位于src根目录，并不是隶属于某个模块。这几 个分别是minErr.js,Angular.js,loader.js,AngularPublic.js,jqLite.js,apis.js。这几个提供了AngularJS中很基础的工具，比如angular.equals等，在文档中它们中的部分被归属于 Global API中。本文主要看看AngularJS的启动和JQuery绑定。minErr.jsJavascript中有Error对象，用于表示运行时错误，但是<a href="http://www.cnblogs.com/htynkn/p/AngularJS-2.html" class="c_b_p_desc_readmore">阅读全文</a></div></div>
			<div class="clear"></div>
			<div class="postDesc">posted @ 2014-01-07 15:54 夜明的孤行灯 阅读(884) 评论(2)  <a href ="http://i.cnblogs.com/EditPosts.aspx?postid=3507068" rel="nofollow">编辑</a></div>
			<div class="clear"></div>

			<div class="postSeparator"></div>

			<div class="postTitle">
				<a id="homepage1_HomePageDays_ctl00_DayList_TitleUrl_3" class="postTitle2" href="http://www.cnblogs.com/htynkn/p/AngularJS-1.html">源代码目录结构--AngularJS学习笔记（一）</a>
			</div>
			<div class="postCon"><div class="c_b_p_desc">摘要: 最近开始接触AngularJS，确实是一个相当不错的东西，可以把很多东西简化掉。又对于其中的双向绑定等的实现很好奇，加之正在学习Javascript的东西，所以觉得从源代码这块开始深入学习AngularJs。获取AngularJs源代码虽然可以直接通过阅读最终的js文件来学习，不过总觉得这样入手不太容易，而项目源代码本身就是一块一块的，同时又配有测试，从这里开始学习的话应该比较容易一些。AngularJs的源码在github上，地址是：https://github.com/angular/angular.js。实现先获取到代码：git clone https://github.com/angu<a href="http://www.cnblogs.com/htynkn/p/AngularJS-1.html" class="c_b_p_desc_readmore">阅读全文</a></div></div>
			<div class="clear"></div>
			<div class="postDesc">posted @ 2014-01-05 13:54 夜明的孤行灯 阅读(860) 评论(2)  <a href ="http://i.cnblogs.com/EditPosts.aspx?postid=3505875" rel="nofollow">编辑</a></div>
			<div class="clear"></div>

			<div class="postSeparator"></div>

			<div class="postTitle">
				<a id="homepage1_HomePageDays_ctl00_DayList_TitleUrl_4" class="postTitle2" href="http://www.cnblogs.com/htynkn/p/gradle_with_proguard.html">Gradle中ProGuard的配置</a>
			</div>
			<div class="postCon"><div class="c_b_p_desc">摘要: 好久没有写博客了…元旦前赶紧写一篇吧…这些日子琢磨了一下gradle。对比起maven确实在配置上灵活很多，对groovy的支持可以更容易的自定义任务。由于最近的几个项目中都使用到了moco这个开源项目,它使用gradle管理，使用命令gradle uberjar可以生成一个独立运行包，这个包有8M大。我使用的环境比较特殊…8M有点大了，就琢磨这使用ProGuard给它瘦个身，效果不错，简单配置以后大小变成了4.6M，只有原来的57%了。在配置的过程中遇到了很多难题，google之后都没有什么中文参考，故记录下了这次尝试，分享给大家。ProGuard简介ProGuard是一个压缩、优化和混淆J<a href="http://www.cnblogs.com/htynkn/p/gradle_with_proguard.html" class="c_b_p_desc_readmore">阅读全文</a></div></div>
			<div class="clear"></div>
			<div class="postDesc">posted @ 2013-12-23 15:36 夜明的孤行灯 阅读(629) 评论(0)  <a href ="http://i.cnblogs.com/EditPosts.aspx?postid=3487534" rel="nofollow">编辑</a></div>
			<div class="clear"></div>

			<div class="postSeparator"></div>

			<div class="postTitle">
				<a id="homepage1_HomePageDays_ctl00_DayList_TitleUrl_5" class="postTitle2" href="http://www.cnblogs.com/htynkn/p/libgdx_practice_1.html">maven和libgdx</a>
			</div>
			<div class="postCon"><div class="c_b_p_desc">摘要: 这一篇是关于maven和libgdx的。本来我准备用gradle(现已有gradle模板了)，不过暂时有点小问题，而同时libgdx官方提供了maven支持，为了快速上手还是选用maven了。为什么要用maven其实原因很简单…我讨厌每次新建项目结构。从最开始接触libgdx手动建立Java项目和对应的Android项目到后面的使用setup-ui工具。手动建立不说了…这个建立步骤甚至挡住了一些人使用libgdx的步伐。setup-ui的确很棒，但是每次重复工作还是很麻烦，特别是需要一个完整的zip包…我本地一般不保存，所以每次都要下载。对我而言，在用libgdx开发游戏的时候用maven有三<a href="http://www.cnblogs.com/htynkn/p/libgdx_practice_1.html" class="c_b_p_desc_readmore">阅读全文</a></div></div>
			<div class="clear"></div>
			<div class="postDesc">posted @ 2013-07-21 22:02 夜明的孤行灯 阅读(1711) 评论(3)  <a href ="http://i.cnblogs.com/EditPosts.aspx?postid=3204364" rel="nofollow">编辑</a></div>
			<div class="clear"></div>

			<div class="postSeparator"></div>

			<div class="postTitle">
				<a id="homepage1_HomePageDays_ctl00_DayList_TitleUrl_6" class="postTitle2" href="http://www.cnblogs.com/htynkn/archive/2013/03/17/libgdx-game-3.html">如何使用libgdx编写一个简单的游戏（三）— 人性化</a>
			</div>
			<div class="postCon"><div class="c_b_p_desc">摘要: 这一篇主要是添加一些让游戏更人性化的东西，比如音效和加载画面，菜单等等。这其中用到了很多资源，主要出自以下几个网站，大家有需要也可以去上面寻找。http://www.freesound.org/添加音效首先是飞镖发出时候的音效，我希望是类似&quot;bing&quot;的一声，要短小精炼。我使用的是http://www.freesound.org/people/BMacZero/sounds/96132/libgdx支持的音频主要是WAV, MP3和OGG，其他的支持需要扩展支持。libgdx中的音频有两种，一种是sound，一种是music。一般所谓的音效使用sound，而音乐就使用mus<a href="http://www.cnblogs.com/htynkn/archive/2013/03/17/libgdx-game-3.html" class="c_b_p_desc_readmore">阅读全文</a></div></div>
			<div class="clear"></div>
			<div class="postDesc">posted @ 2013-03-17 14:10 夜明的孤行灯 阅读(4436) 评论(5)  <a href ="http://i.cnblogs.com/EditPosts.aspx?postid=2964435" rel="nofollow">编辑</a></div>
			<div class="clear"></div>

			<div class="postSeparator"></div>

			<div class="postTitle">
				<a id="homepage1_HomePageDays_ctl00_DayList_TitleUrl_7" class="postTitle2" href="http://www.cnblogs.com/htynkn/archive/2013/02/17/libgdx-game-2.html">如何使用libgdx编写一个简单的游戏（二）— 完善</a>
			</div>
			<div class="postCon"><div class="c_b_p_desc">摘要: 上一篇介绍游戏雏形的编写，这一篇将完善部分逻辑并添加更多效果。例子代码在https://github.com/htynkn/DartsShaSha，如有需要请自行在tag中下载对应部分。完善飞镖逻辑现在的飞镖可以旋转可以飞行了，但是有一个问题却没有解决。首先飞镖的速度，如果用户触摸位置很靠近左侧，那么飞镖的速度就很慢了。其次，如果用户触摸中间位置，默认情况下飞镖应该是朝那个方向飞行，而不是飞到触摸位置就消失了。这里的处理办法很简单，就是根据用户触摸位置，算出一个X为480的值，这样飞镖就可以飞到最右侧，同时保持相当的速度。在createProjectile方法中添加float r = (tar<a href="http://www.cnblogs.com/htynkn/archive/2013/02/17/libgdx-game-2.html" class="c_b_p_desc_readmore">阅读全文</a></div></div>
			<div class="clear"></div>
			<div class="postDesc">posted @ 2013-02-17 11:57 夜明的孤行灯 阅读(4742) 评论(8)  <a href ="http://i.cnblogs.com/EditPosts.aspx?postid=2914131" rel="nofollow">编辑</a></div>
			<div class="clear"></div>

			<div class="postSeparator"></div>

			<div class="postTitle">
				<a id="homepage1_HomePageDays_ctl00_DayList_TitleUrl_8" class="postTitle2" href="http://www.cnblogs.com/htynkn/archive/2013/02/14/libgdx-game-1.html">如何使用libgdx编写一个简单的游戏（一）— 雏形</a>
			</div>
			<div class="postCon"><div class="c_b_p_desc">摘要: 写这几篇文章主要是看了这个系列的文章：http://www.raywenderlich.com/352/how-to-make-a-simple-iphone-game-with-cocos2d-tutorial这个系列主要讲述了如何使用Cocos2D编写简单的游戏。稍微读读感觉不错，所以想写个libgdx版本的。本篇文章主要讲述基本内容的编写，包括显示人物、怪兽和飞镖。最终效果如下图：获取libgdx你可以从libgdx的官网下载打包好的代码，我下载的是0.98版本。当然，你也可以从git代码仓库获取最新的版本的，或者你习惯使用的以前版本，比如0.97。创建项目libgdx项目的创建可以有多<a href="http://www.cnblogs.com/htynkn/archive/2013/02/14/libgdx-game-1.html" class="c_b_p_desc_readmore">阅读全文</a></div></div>
			<div class="clear"></div>
			<div class="postDesc">posted @ 2013-02-14 15:39 夜明的孤行灯 阅读(10482) 评论(23)  <a href ="http://i.cnblogs.com/EditPosts.aspx?postid=2911265" rel="nofollow">编辑</a></div>
			<div class="clear"></div>

			<div class="postSeparator"></div>

			<div class="postTitle">
				<a id="homepage1_HomePageDays_ctl00_DayList_TitleUrl_9" class="postTitle2" href="http://www.cnblogs.com/htynkn/archive/2013/01/04/libgdx.html">android游戏开发框架libgdx的使用（完）—杂谈Libgdx</a>
			</div>
			<div class="postCon"><div class="c_b_p_desc">摘要: 写在最前面仔细看看，上一篇博文是10月5号了，有很长的时间没有写博客了。升入大三以后时间愈发的少了，要忙着各种事情，也在纠结该继续读书还是找工作，读书是读国内的还是读国外的…libgdx这个系列的文章开篇一年有余了，期间得到了很多朋友的鼓励和意见，总的来说感觉还是蛮不错的。想了很久，我决定给这个系列的文章画上一个句号。就原因来说是多方面的：第一是libgdx的版本从0.92到了今天的0.97版本，虽然总体架构变化不大，但是细节上的接口还是有很多差异了，早期的一些文章的实例代码可能无法直接运行了，我又没有精力细细检查和修改，可能新入手的朋友们会遇到一些问题。第二就是这个系列本身的问题，我开始写的<a href="http://www.cnblogs.com/htynkn/archive/2013/01/04/libgdx.html" class="c_b_p_desc_readmore">阅读全文</a></div></div>
			<div class="clear"></div>
			<div class="postDesc">posted @ 2013-01-04 15:56 夜明的孤行灯 阅读(3388) 评论(10)  <a href ="http://i.cnblogs.com/EditPosts.aspx?postid=2844375" rel="nofollow">编辑</a></div>
			<div class="clear"></div>

			<div class="postSeparator"></div>

			<div class="postTitle">
				<a id="homepage1_HomePageDays_ctl00_DayList_TitleUrl_10" class="postTitle2" href="http://www.cnblogs.com/htynkn/archive/2012/10/05/Hadoop-On-stacklab.html">在stacklab上搭建Hadoop平台</a>
			</div>
			<div class="postCon"><div class="c_b_p_desc">摘要: 什么是stacklabstacklab是中国开源云联盟(COSCL)和中国OpenStack用户组(COSUG)联合成立OpenStack实验室，简单的来说就是一个免费申请和使用OpenStack的平台，和国外的那个TryOpenstack有点像，不过stacklab没有门槛，不需要邀请码什么的就可以申请使用。稍微试用了一下感觉很爽，特意和大家分享一下。在stacklab建立镜像网址：http://stacklab.org/点击Register注册，验证完邮箱以后登录。在建立镜像以前先配置好Keypairs。点击Create Keypair，名字随便填写就行了。完成可以得到一个pem文件。在S<a href="http://www.cnblogs.com/htynkn/archive/2012/10/05/Hadoop-On-stacklab.html" class="c_b_p_desc_readmore">阅读全文</a></div></div>
			<div class="clear"></div>
			<div class="postDesc">posted @ 2012-10-05 13:19 夜明的孤行灯 阅读(1587) 评论(2)  <a href ="http://i.cnblogs.com/EditPosts.aspx?postid=2712147" rel="nofollow">编辑</a></div>
			<div class="clear"></div>

			<div class="postSeparator"></div>

			<div class="postTitle">
				<a id="homepage1_HomePageDays_ctl00_DayList_TitleUrl_11" class="postTitle2" href="http://www.cnblogs.com/htynkn/archive/2012/08/29/libgdx_24.html">android游戏开发框架libgdx的使用（二十四）—physics-body-editor配合Box2D加快开发</a>
			</div>
			<div class="postCon"><div class="c_b_p_desc">摘要: Box2d是一个很出名的2d物理引擎，有C++、Java等等版本。libgdx对Box2D进行了很高效的封装，极大的降低了学习和使用成本。但是我觉得和Libgdx的UI库比起来，Box2D的使用始终比较复杂，单纯的物体降落什么的还好说，要是遇上一个特别复杂的物体，有时候就有点繁琐了。在网上游荡时发现了physics-body-editor，绝对堪称神器。physics-body-editor项目主页：http://code.google.com/p/box2d-editor/复杂对象的创建只需要用鼠标点点就行了。工具可以到处Json格式的文件，还可以用于其他环境中。对于Libgdx而言，该项目<a href="http://www.cnblogs.com/htynkn/archive/2012/08/29/libgdx_24.html" class="c_b_p_desc_readmore">阅读全文</a></div></div>
			<div class="clear"></div>
			<div class="postDesc">posted @ 2012-08-29 12:04 夜明的孤行灯 阅读(3888) 评论(16)  <a href ="http://i.cnblogs.com/EditPosts.aspx?postid=2661827" rel="nofollow">编辑</a></div>
			<div class="clear"></div>

			<div class="postSeparator"></div>

			<div class="postTitle">
				<a id="homepage1_HomePageDays_ctl00_DayList_TitleUrl_12" class="postTitle2" href="http://www.cnblogs.com/htynkn/archive/2012/08/28/libgdx_23.html">android游戏开发框架libgdx的使用（二十三）—使用Universal Tween Engine实现动画效果</a>
			</div>
			<div class="postCon"><div class="c_b_p_desc">摘要: libgdx的ui库可以实现一些动画效果，但是做游戏来说可能有些不足。Universal Tween Engine是一个纯java实现的动画库。地址：http://code.google.com/p/java-universal-tween-engine/只要能够用float表示的一切java对象它可以让它动画化，可以使用于Libgdx、Android、Swing等等。Universal Tween Engine使用一般流程使用Universal Tween Engine最重要的一个步骤就是实现TweenAccessor接口，这个接口定义了getValues和setValues方法。然后Eng<a href="http://www.cnblogs.com/htynkn/archive/2012/08/28/libgdx_23.html" class="c_b_p_desc_readmore">阅读全文</a></div></div>
			<div class="clear"></div>
			<div class="postDesc">posted @ 2012-08-28 22:50 夜明的孤行灯 阅读(4285) 评论(9)  <a href ="http://i.cnblogs.com/EditPosts.aspx?postid=2660990" rel="nofollow">编辑</a></div>
			<div class="clear"></div>

			<div class="postSeparator"></div>

			<div class="postTitle">
				<a id="homepage1_HomePageDays_ctl00_DayList_TitleUrl_13" class="postTitle2" href="http://www.cnblogs.com/htynkn/archive/2012/08/26/libgdx_22.html">android游戏开发框架libgdx的使用（二十二）—利用TABLELAYOUT进行布局</a>
			</div>
			<div class="postCon"><div class="c_b_p_desc">摘要: 前面有一篇文章介绍了用TWL进行布局，最近做其他java的东西接触到了table-layout，用着很不错，仔细看来一下文档，原来还支持libgdx。简单试用了一下，比TWL好使多了。TABLELAYOUT简介TABLELAYOUT是一个轻量级的UI组件布局库。使用表格实现，有点像HTML的TABLE。它支持libgdx, Swing, Android和TWL。支持Java API和配置文件两种方式。同时有个配套的编辑器http://table-layout.googlecode.com/svn/wiki/jws/editor.jnlp使用配置文件其实最好的方法应该是使用配置文件，这样便于修改<a href="http://www.cnblogs.com/htynkn/archive/2012/08/26/libgdx_22.html" class="c_b_p_desc_readmore">阅读全文</a></div></div>
			<div class="clear"></div>
			<div class="postDesc">posted @ 2012-08-26 11:17 夜明的孤行灯 阅读(3143) 评论(8)  <a href ="http://i.cnblogs.com/EditPosts.aspx?postid=2657237" rel="nofollow">编辑</a></div>
			<div class="clear"></div>

			<div class="postSeparator"></div>

			<div class="postTitle">
				<a id="homepage1_HomePageDays_ctl00_DayList_TitleUrl_14" class="postTitle2" href="http://www.cnblogs.com/htynkn/archive/2012/08/24/libgdx_21.html">android游戏开发框架libgdx的使用（二十一）—使用TTF字库支持中文</a>
			</div>
			<div class="postCon"><div class="c_b_p_desc">摘要: 好久没有更新这个系列的文章了。今天下午在群上讨论libgdx对中文的支持问题。本来Hiero做是最好的，但是LIbgdx的BitmapFont不支持多图，常用汉字3500个，是在做不到一张图上。libgdx很早之前就有ttf的支持了，不过那个时候有点问题。经测试新版本（0.96）完全支持，特地总结出来和大家分享。TTF字库TTF(TrueTypeFont)是Apple公司和Microsoft公司共同推出的字体文件格式,随着windows的流行,已经变成最常用的一种字体文件表示方式，应用范围非常广。如果是Windows操作系统，可以从Fonts文件夹中找到很多字库。也可以从网上下载。我推荐YaH<a href="http://www.cnblogs.com/htynkn/archive/2012/08/24/libgdx_21.html" class="c_b_p_desc_readmore">阅读全文</a></div></div>
			<div class="clear"></div>
			<div class="postDesc">posted @ 2012-08-24 20:13 夜明的孤行灯 阅读(3941) 评论(12)  <a href ="http://i.cnblogs.com/EditPosts.aspx?postid=2654723" rel="nofollow">编辑</a></div>
			<div class="clear"></div>
		<div id="homepage1_HomePageDays_ctl00_DayList_BottomPager" class="topicListFooter"><a href="/htynkn/default.html?page=1&amp;OnlyTitle=1">仅列出标题</a><div class="pager">
	共5页:&nbsp;1&nbsp;<a href="http://www.cnblogs.com/htynkn/default.html?page=2">2</a>&nbsp;<a href="http://www.cnblogs.com/htynkn/default.html?page=3">3</a>&nbsp;<a href="http://www.cnblogs.com/htynkn/default.html?page=4">4</a>&nbsp;<a href="http://www.cnblogs.com/htynkn/default.html?page=5">5</a>&nbsp;<a href="http://www.cnblogs.com/htynkn/default.html?page=2">下一页</a>&nbsp;
</div></div>
</div>



	</div><!--end: forFlow -->
	</div><!--end: mainContent 主体内容容器-->

	<div id="sideBar">
		<div id="sideBarMain">

<!--done-->
<div class="newsItem">
<h3 class="catListTitle">公告</h3>
	<div id="blog-news"></div><script type="text/javascript">loadBlogNews();</script>
</div>

			<div id="blog-calendar" style="display:none"></div><script type="text/javascript">loadBlogDefaultCalendar();</script>

			<div id="leftcontentcontainer">
				<div id="blog-sidecolumn"></div><script type="text/javascript">loadBlogSideColumn();</script>
			</div>

		</div><!--end: sideBarMain -->
	</div><!--end: sideBar 侧边栏容器 -->
	<div class="clear"></div>
	</div><!--end: main -->
	<div class="clear"></div>
	<div id="footer">

<!--done-->
Copyright &copy;2014 夜明的孤行灯
	</div><!--end: footer -->
</div><!--end: home 自定义的最大容器 -->
<!--PageEndHtml Block Begin-->
<script type="text/javascript">
var _bdhmProtocol = (("https:" == document.location.protocol) ? " https://" : " http://");
document.write(unescape("%3Cscript src='" + _bdhmProtocol + "hm.baidu.com/h.js%3F813fdd999bef0f68fc9d5a0145973e71' type='text/javascript'%3E%3C/script%3E"));
</script>

<!-- JiaThis Button BEGIN -->
<script type="text/javascript">
var jiathis_config = {
data_track_clickback:'true',
shareImg:{
        "showType":"ALL",
"divname":"cnblogs_post_body"
}
};
</script>
<script type="text/javascript" src="http://v3.jiathis.com/code_mini/jiathis_r.js?move=0&amp;uid=1542415" charset="utf-8"></script>
<!-- JiaThis Button END -->
<div class="returnTop" title="嗖的就上去了！">
  <span class="s"></span>
  <span class="b"></span>
  返回顶部
</div>
<style>
.returnTop {
    position: fixed;
    _position: absolute;
    right: 20px;
    bottom: 40px;
    _bottom: auto;
    display: none;
    width: 40px;
    height: 40px;
    border: 1px solid #2E5FB7;
    border-radius:4px;
    background: #fff;
    box-shadow: 0 0 5px #F5F5F5;
    text-indent: -9999px;
    cursor: pointer;
}
.returnTop .s {
    position: absolute;
    top: -2px;
    _top: -20px;
    left: 10px;
    width: 0;
    height: 0;
    border-width: 10px;
    border-color: transparent transparent #2E65B7;
    border-style: dashed dashed solid;
}
.returnTop .b {
    position: absolute;
    top: 18px;
    left: 16px;
    height: 12px;
    width: 8px;
    background: #2E5FB7;
}
</style>
<script>
$(function(){
  // 给 window 对象绑定 scroll 事件
  $(window).bind("scroll", function(){

      // 获取网页文档对象滚动条的垂直偏移
      var scrollTopNum = $(document).scrollTop(),
          // 获取浏览器当前窗口的高度
          winHeight = $(window).height(),
          returnTop = $("div.returnTop");

      // 滚动条的垂直偏移大于 0 时显示，反之隐藏
      (scrollTopNum > 0) ? returnTop.fadeIn("fast") : returnTop.fadeOut("fast");

      // 给 IE6 定位
      if (!-[1,]&&!window.XMLHttpRequest) {
          returnTop.css("top", scrollTopNum + winHeight - 200);
      }

  });

  // 点击按钮后，滚动条的垂直方向的值逐渐变为0，也就是滑动向上的效果
  $("div.returnTop").click(function() {
      $("html, body").animate({ scrollTop: 0 }, 100);
  });

});
</script>
<!--PageEndHtml Block End-->
</body>
</html>
